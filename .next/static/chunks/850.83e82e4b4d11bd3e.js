"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[850,462],{6121:function(t,e,i){i.d(e,{w:function(){return s}});class s{addDamageNumber(t,e,i,s){let r="damage_".concat(this.nextId++),n={id:r,damage:t,isCritical:e,position:i.clone(),timestamp:Date.now(),damageType:s};return this.damageNumbers.push(n),r}removeDamageNumber(t){let e=this.damageNumbers.findIndex(e=>e.id===t);-1!==e&&this.damageNumbers.splice(e,1)}getDamageNumbers(){return[...this.damageNumbers]}cleanup(){let t=Date.now();this.damageNumbers=this.damageNumbers.filter(e=>t-e.timestamp<5e3),this.damageNumbers.length>50&&(this.damageNumbers.sort((t,e)=>e.timestamp-t.timestamp),this.damageNumbers=this.damageNumbers.slice(0,50))}clear(){this.damageNumbers.length=0,this.nextId=0}getCount(){return this.damageNumbers.length}constructor(){this.damageNumbers=[],this.nextId=0}}},948:function(t,e,i){i.d(e,{v:function(){return s}});class s{on(t,e){this.listeners.has(t)||this.listeners.set(t,[]),this.listeners.get(t).push(e)}off(t,e){let i=this.listeners.get(t);if(i){let t=i.indexOf(e);-1!==t&&i.splice(t,1)}}emit(t,e){let i=this.listeners.get(t);if(i)for(let t of[...i])t(e)}once(t,e){let i=s=>{e(s),this.off(t,i)};this.on(t,i)}removeAllListeners(t){t?this.listeners.delete(t):this.listeners.clear()}getListenerCount(t){var e;return(null===(e=this.listeners.get(t))||void 0===e?void 0:e.length)||0}constructor(){this.listeners=new Map}}},6366:function(t,e,i){i.d(e,{M:function(){return r}});var s=i(1448);class r{static clamp(t,e,i){return Math.max(e,Math.min(i,t))}static lerp(t,e,i){return t+(e-t)*i}static smoothStep(t,e,i){let s=this.clamp((i-t)/(e-t),0,1);return s*s*(3-2*s)}static distance2D(t,e,i,s){let r=i-t,n=s-e;return Math.sqrt(r*r+n*n)}static distance3D(t,e,i,s,r,n){let l=s-t,o=r-e,a=n-i;return Math.sqrt(l*l+o*o+a*a)}static normalizeAngle(t){for(;t>Math.PI;)t-=2*Math.PI;for(;t<-Math.PI;)t+=2*Math.PI;return t}static random(t,e){return Math.random()*(e-t)+t}static randomInt(t,e){return Math.floor(Math.random()*(e-t+1))+t}static pointInCircle(t,e,i,s,r){let n=t-i,l=e-s;return n*n+l*l<=r*r}static vector3Distance(t,e){return t.distanceTo(e)}static vector3Lerp(t,e,i){return new s.Vector3().lerpVectors(t,e,i)}static degToRad(t){return t*this.DEG_TO_RAD}static radToDeg(t){return t*this.RAD_TO_DEG}static approximately(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e-4;return Math.abs(t-e)<i}static map(t,e,i,s,r){return(t-e)*(r-s)/(i-e)+s}}r.DEG_TO_RAD=Math.PI/180,r.RAD_TO_DEG=180/Math.PI},6018:function(t,e,i){i.d(e,{C:function(){return n},m:function(){return r}});var s=i(1448);let r=()=>{let t=[];for(let e=0;e<22;e++){let i=e/22*Math.PI*2,r=46+(4*Math.random()-2),n=Math.cos(i)*r,l=Math.sin(i)*r,o=.75+.4*Math.random();t.push({position:new s.Vector3(n,0,l),scale:o});let a=i+Math.PI/22,h=34*Math.cos(a),u=34*Math.sin(a);t.push({position:new s.Vector3(h,0,u),scale:.9*o})}return t},n=t=>{let e=.618033988749*t,i=new s.ConeGeometry(5,8,16,8),r=i.attributes.position.array;for(let t=0;t<r.length;t+=3){let i=r[t],s=r[t+1],n=r[t+2];if(s>-3.5&&s<3.5){let l=Math.sin(.5*i+e)*Math.cos(.3*n+2*e),o=Math.cos(.3*i+3*e)*Math.sin(.5*n+4*e),a=Math.sin(1.2*i+5*e)*Math.cos(.8*n+6*e)*.3,h=Math.cos(.9*i+7*e)*Math.sin(1.1*n+8*e)*.3,u=1-Math.abs(s)/2,c=.4+.3*Math.sin(10*e);r[t]+=(l+a)*c*u,r[t+2]+=(o+h)*c*u,r[t+1]+=.2*Math.sin(.2*i+.2*n+e)*u}}return i.attributes.position.needsUpdate=!0,i.computeVertexNormals(),i}},6520:function(t,e,i){i.d(e,{L:function(){return s}});class s{acquire(){return this.pool.length>0?this.pool.pop():this.createFn()}release(t){this.pool.length<this.maxSize&&(this.resetFn(t),this.pool.push(t))}clear(){this.pool.length=0}getPoolSize(){return this.pool.length}constructor(t,e,i=100){this.pool=[],this.createFn=t,this.resetFn=e,this.maxSize=i}}},4183:function(t,e,i){i.d(e,{k:function(){return r}});var s=i(1448);class r{getCellKey(t,e,i){return"".concat(t,",").concat(e,",").concat(i)}getCellCoords(t){return new s.Vector3(Math.floor(t.x/this.cellSize),Math.floor(t.y/this.cellSize),Math.floor(t.z/this.cellSize))}getCellsForBounds(t){let e=[],i=this.getCellCoords(t.min),s=this.getCellCoords(t.max);for(let t=i.x;t<=s.x;t++)for(let r=i.y;r<=s.y;r++)for(let n=i.z;n<=s.z;n++)e.push(this.getCellKey(t,r,n));return e}insert(t,e){this.remove(t);let i={entity:t,bounds:e.clone()},s=this.getCellsForBounds(e);for(let t of s)this.grid.has(t)||this.grid.set(t,[]),this.grid.get(t).push(i);this.entityCells.set(t.id,s)}remove(t){let e=this.entityCells.get(t.id);if(e){for(let i of e){let e=this.grid.get(i);if(e){let s=e.findIndex(e=>e.entity.id===t.id);-1!==s&&e.splice(s,1),0===e.length&&this.grid.delete(i)}}this.entityCells.delete(t.id)}}update(t,e){let i=this.entityCells.get(t.id)||[],s=this.getCellsForBounds(e);if(this.arraysEqual(i,s))for(let s of i){let i=this.grid.get(s);if(i){let s=i.find(e=>e.entity.id===t.id);s&&s.bounds.copy(e)}}else this.insert(t,e)}arraysEqual(t,e){if(t.length!==e.length)return!1;let i=[...t].sort(),s=[...e].sort();return i.every((t,e)=>t===s[e])}query(t){let e=[],i=new Set;for(let s of this.getCellsForBounds(t)){let r=this.grid.get(s);if(r)for(let s of r)!i.has(s.entity.id)&&(i.add(s.entity.id),t.intersectsBox(s.bounds)&&e.push(s))}return e}queryRadius(t,e){this.tempBox.setFromCenterAndSize(t,new s.Vector3(2*e,2*e,2*e));let i=this.query(this.tempBox),r=[],n=e*e;for(let e of i)this.tempVector.copy(t),e.bounds.clampPoint(this.tempVector,this.tempVector),t.distanceToSquared(this.tempVector)<=n&&r.push(e);return r}queryPoint(t){let e=this.getCellCoords(t),i=this.getCellKey(e.x,e.y,e.z),s=this.grid.get(i);if(!s)return[];let r=[];for(let e of s)e.bounds.containsPoint(t)&&r.push(e);return r}getNearbyEntities(t,e){let i=this.entityCells.get(t.id);if(!i)return[];let r=[],n=new Set,l=e*e,o=this.getEntityEntry(t);if(!o)return[];let a=new s.Vector3;for(let h of(o.bounds.getCenter(a),this.getExpandedCells(i,Math.ceil(e/this.cellSize)))){let e=this.grid.get(h);if(e)for(let i of e){if(i.entity.id===t.id||n.has(i.entity.id))continue;n.add(i.entity.id);let e=new s.Vector3;i.bounds.getCenter(e),a.distanceToSquared(e)<=l&&r.push(i.entity)}}return r}getEntityEntry(t){let e=this.entityCells.get(t.id);if(!e||0===e.length)return null;let i=this.grid.get(e[0]);return i&&i.find(e=>e.entity.id===t.id)||null}getExpandedCells(t,e){let i=new Set;for(let s of t){let[t,r,n]=s.split(",").map(Number);for(let s=-e;s<=e;s++)for(let l=-e;l<=e;l++)for(let o=-e;o<=e;o++)i.add(this.getCellKey(t+s,r+l,n+o))}return Array.from(i)}clear(){this.grid.clear(),this.entityCells.clear()}getStats(){let t=this.grid.size,e=this.entityCells.size,i=0,s=0;return this.grid.forEach(t=>{s+=t.length,i=Math.max(i,t.length)}),{totalCells:t,totalEntities:e,averageEntitiesPerCell:t>0?s/t:0,maxEntitiesInCell:i}}debugVisualize(){let t=[];return t.push("Spatial Hash Stats: ".concat(JSON.stringify(this.getStats(),null,2))),this.grid.forEach((e,i)=>{e.length>0&&t.push("Cell ".concat(i,": ").concat(e.length," entities"))}),t}constructor(t=5){this.tempBox=new s.Box3,this.tempVector=new s.Vector3,this.cellSize=t,this.grid=new Map,this.entityCells=new Map}}}}]);